#!/bin/sh

INSTDIR="$(dirname $0)"
chroot=$(which chroot)
chrootcmd="env -i TERM=$TERM HOME=$HOME SHELL=/bin/bash $chroot $INSTDIR"

if test x"$1" = "xchroot"; then
	echo "# source /etc/profile"
	$chrootcmd /bin/bash
elif test x"$1" = "xsetup"; then
	shift
	$chrootcmd /setup "$@" | tee "$INSTDIR"/install.log
elif test x"$1" = "xfetch" || test x"$1" = "xunpack"; then
	pushd "$INSTDIR"
	arch=$(uname -m | sed 's/x86_/amd/')
	getpath=$(wget -O- http://${2:-distfiles.gentoo.org}/releases/$arch/autobuilds/latest-stage3.txt | sed '$!d')
	basepath=$(basename $getpath)
	wget -c http://${2:-distfiles.gentoo.org}/releases/$arch/autobuilds/$getpath
	test x"$1" = "xunpack" && tar xkjpf $basepath -C $INSTDIR
	popd
elif test x"$1" = "xsync"; then
	$chrootcmd /usr/bin/emerge --quiet --sync
elif test x"$1" = "xweb-sync"; then
	if test -x "$INSTDIR"/usr/bin/emerge-webrsync; then
		$chrootcmd /usr/bin/emerge-webrsync
	else
		pushd "$INSTDIR"
		wget -c http://${2:-distfiles.gentoo.org}/snapshots/portage-latest.tar.bz2
		tar xf "$INSTDIR"/portage-latest.tar.bz2 -C "$INSTDIR"/usr
		popd
	fi
elif test x"$1" = "xprepare"; then
	mountpoint -q "$INSTDIR"/proc || mount -t proc proc "$INSTDIR"/proc
	mountpoint -q "$INSTDIR"/dev || mount --rbind /dev "$INSTDIR"/dev
	mountpoint -q "$INSTDIR"/sys || mount --rbind /sys "$INSTDIR"/sys

	cmp -s /etc/resolv.conf "$INSTDIR/etc/resolv.conf" || cp -L /etc/resolv.conf $INSTDIR/etc
	$chrootcmd /usr/sbin/env-update
elif test x"$1" = "xproxy"; then
	env | grep proxy | tee "$INSTDIR"/etc/env.d/02proxy
elif test x"$1" = "xkeymap"; then
	sed -i -e '/^keymap="us"$/s/s/k/' "$INSTDIR"/etc/conf.d/keymaps
elif test x"$1" = "xpre-gcc"; then
	cat >"$INSTDIR"/pre-gcc <<-EOF
	#!/bin/bash
	set -e
	/usr/sbin/env-update
	source /etc/profile
	emerge -1 gcc
	gcc-config $(gcc-config -l | awk 'END{print $2}')
	/usr/sbin/env-update
	source /etc/profile
	emerge -1 libtool
	EOF
	chmod +x "$INSTDIR"/pre-gcc
	$chrootcmd /pre-gcc
	rm "$INSTDIR"/pre-gcc
else
	echo -e "$0 prepare\t\tprepare required mountpoints"
	echo -e "$0 chroot\t\tchroot into your environment"
	echo
	echo
	echo -e "$0 fetch <mirror>\tfetch latest stage3 tarball"
	echo -e "$0 unpack <mirror>\tfetch and unpack stage3"
	echo
	echo -e "$0 proxy\t\tset proxy variables in the environment"
	echo -e "$0 keymap\t\tset UK keymap in the environment"
	echo
	echo -e "$0 sync\t\tsync portage tree in the chroot"
	echo -e "$0 web-sync\t\tsync portage tree via snapshots"
	echo
	echo -e "$0 pre-gcc\t\tupdate gcc"
	echo
	echo -e "$0 setup <...>\trun the setup program"
fi
